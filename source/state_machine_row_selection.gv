
digraph ColumnResizing{
  node [shape = circle, fontsize = 9];
  edge [ fontsize = 12];

  s0 [label="s0" color = green, fontcolor = green,];
  s6 [label="s6"];
  s7 [label="s7"];
  s2 [label="s2"];
  s3 [label="s3"];
  s4 [label="s4"];
  s5 [label="s5"];

  s0 -> s0 [label = "E0, E3, E5, E7, E9"];
  s0 -> s1 [label = "C0"];
  s1 -> s0 [label = "&#949;"];
  s0 -> s6 [label = "C3"];
  s0 -> s2 [label = "C1"];
  s0 -> s4 [label = "C2"];
  s6 -> s7 [label = "&#949;"];
  s7 -> s7 [label = "E2"];
  s7 -> s0 [label = "E1, E3" ];
  s2 -> s3 [label = "&#949;"]8
  s3 -> s3 [label = "E0, E1, E2, E4, E7, E9"];
  s3 -> s0 [label = "C5"];
  s4 -> s5 [label = "&#949;"];
  s5 -> s0 [label = "E1, E3"];
  s5 -> s5 [label = "E2"];
  s0 -> s8 [label = "C4"];
  s8 -> s8 [label = "E7, E9"];
  s8 -> s0 [label = "E3, E5, E8, E10"];
}

/**
Parameters:
originalTable (TableModel) - The model which is having its rows selected.

Fields:
selectedRows (ArrayTableModel) 
  - The model that keeps track of which rows are selected
highlightedRow (number) - The row currently highlighted
previousRow (number) - The last row that was current
currentRow (number) - The row the mouse is currently inside or 
  that the keyboard is focued on
isShiftDown (boolean) - Keeps trackXX of if SHIFT is down
isCtrlDown (boolean) - Keeps track of if CTRL is down
isMouseDown (boolean) - Keeps track of the left mouse button
isUpDown (boolean) - Keeps track of if the up key is down
isDownDown (boolean) - Keeps track of if the down key is down
isAdding (boolean) - Keeps track of if rows should be added

Initialization:
selectedRows = new ArrayTableModel()
for(row in OriginalTable) {
  selectedRows.add([false]);
}
if(originalTable.rowCount > 0) {
  add row 0 to selectedRows
}
hilightedRow = 0
previousRow = 0
currentRow = 0
isShiftDown = false
isCtrlDown = false
isMouseDown = false
isUpDown = false
isDownDown = false
isAdding = true

States:
s0: Starting state.
  if(!isMouseDown && !this.isDownDown && !this.isUpDown) {
    this.currentRow = this.hilightedRow;
  }
s1:
  this.hilightedRow = 0;
  selectedRows = clear all true values
s2:
  selectedRows = clear all true values
  previousRow = highlightedRow
  isAdding = true;
s3: 
  if(currentRow >= previousRow && currentRow >= highlightedRow
      || currentRow <= previousRow && currentRow <= highlightedRow) {
    add rows from previousRow to currentRow
  } else {
    remove rows from previousRow to currentRow
  }
s4:
  highlightedRow = currentRow
  previousRow = highlightedRow
  if(current in selected[]) {
    isAdding = false;
  } else {
    isAdding = true;
  }
s5:
  if(isAdding) {
    if(currentRow >= previousRow && currentRow >= highlightedRow
        || currentRow <= previousRow && currentRow <= highlightedRow) {
      add rows from previousRow to currentRow
    } else {
      remove rows from previousRow to currentRow
    }
  } else {
    if(currentRow >= previousRow && currentRow >= highlightedRow
        || currentRow <= previousRow && currentRow <= highlightedRow) {
      add rows from previousRow to currentRow
    } else {
      remove rows from previousRow to currentRow
    }
  }
s6:
  selectedRows = clear all true values
  isAdding = true
  highlightedRow = currentRow
  previousRow = highlightedRow
  
s7:
  if(currentRow >= previousRow && currentRow >= highlightedRow
      || currentRow <= previousRow && currentRow <= highlightedRow) {
    add rows from previousRow to currentRow
  } else {
    remove rows from previousRow to currentRow
  }
s8:
  selectedRows = clear all true values
  highlightedRow = currentRow
  add hilightedRow to selectedRows

Conditions:
C0: hilightedRow === -1 && (isUpDown || isDownDown)
C1: isShiftDown && (isMouseDown || isUpDown || isDownDown)
C2: isCtrlDown && isMouseDown
C3: !isShiftDown && !isCtrlDown && isMouseDown
C4: !isShiftDown && !isCtrlDown && (isUpDown || isDownDown)
C5: !isMouseDown && !isShiftDown

Events:
E0: Mouse Down
  isMouseDown = true
  currentRow = row
E1: Mouse Up
  isMouseDown = false
E2: Mouse Enters a row ()
  if(isMouseDown): 
    currentRow = row
E3: Shift Down
  isShiftDown = true
E4: Shift Up
  isShiftDown = false
E5: Ctrl Down
  isCtrlDown = true
E6: Ctrl Up
  isCtrlDown = false
E7: Up Button Down
  isUpDown = true
  if (currentRow != 0 && !isMouseDown):
    currentRow = currentRow - 1
E8: Up Button Up
  isUpDown = false
E9: Down Button Down
  isDownDown = true
  if(currentRow < selectedtable && !isMouseDown) {
    currentRow = currentRow + 1
  }
E10: Down Button Up
   isDownDown = false
*/
